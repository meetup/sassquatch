/** 
 *      @file   _new_extends.scss
 *
 *      @description
 *      Temporary holding file until extends are merged into sassquatch.
 */


/*  ======================================================================= */
/*  TEMPORARY RESET  */
%temporary_reset_font_size {
    font-size: 16px !important;
}


/*  ======================================================================= */
/*  LAYOUT  */
%layout_full_width_table {
    display: table;
    width: 100%;
}

%layout_middle_align_table_cell {
    display: table-cell;
    vertical-align: middle;
}


/*  ======================================================================= */
/*  MEDIA AND IMAGES  */

%avatar {
    @extend %temporary_reset_font_size;
    // NOTE: This is so we can use em-based sizing. In the futuer, once
    // we edit the meetup mobile resets to a $baseline: 16px, we can
    // get rid of this declaration.

    img { 
        // Inner image always fills width, and adjusts height accordingly
        background-color: $C_gray_lighter;
        width: 100%; 
        max-height: 100%; 
        // NOTE: Right now, this `height:100%` is needed to make sure that
        // the img doesn't stretch to non-square dimensions on Android devices
        // if the source img file isn't found or takes a while to load.

        display: block; 
        // NOTE: Needed for Firefox so that the img renders as a square in case
        // the src asset does not load properly. Otherwise, it will collapse
        // around the alt text.

        line-height: 1;
        overflow: hidden;
        // NOTE: Needed to make sure that the alt text in the image does not 
        // wrap over itself and is readable in case the img src does not load.
        // Both of these problems are native to Firefox on Android.
    }
}



/*  ======================================================================= */
/*  TEXT MANIPULATION  */
%text_truncate {     
    @include box-sizing('border');
    white-space: nowrap;
    overflow-x: hidden;

    -o-text-overflow: ellipsis; /* Opera Mini/Mobile */ 
    text-overflow: ellipsis;
    // NOTE: cleanup: this should be used instead of the `truncate` mixin
    // for efficiency now that we have extends.
}

%text_disable_selection {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    // NOTE: This will disable the ability to select/copy/paste text on iOS,
    // some versions of Android, IE10. It should ONLY be applied to UI 
    // elements, like label and buttons that have no business being high-
    // lighted, and can be highlighted accidentally.
}

/*  ======================================================================= */
/*  TEXT STYLES MANIPULATION  */

%touch_item_label_font_style {
    font-size: $FS_label;
    line-height: $LH_standard;
}


/*  ======================================================================= */
/*  UI SPECIFIC EXTENDS AND MIXINS  */

%ui_pseudo_pressables_style {
    @include box-sizing('border');
    height: $pressables_height_and_width;
    width: $pressables_height_and_width;
    text-align: center;
    border: 2px solid $C_gray80;
}

%ui_label_style {
    padding-bottom: 0;  /* Reset */
    padding-left: $input_and_textarea_inner_padding;
    // NOTE: Since we're placing all the labels to the left of the <input>
    // elements and the <input> element has LR padding, we only need to put
    // padding on the left of the label (otherwise we end up with a pretty
    // big gap between the end of the text in the label and the <input>).
}

@mixin ui_placeholder {
    // Why isn't this an @extend instead? Because when you cluster together 
    // uninterpretable CSS rules (like vendor-specific placeholder attributes)
    // it will invalidate all of the ones it doesn't understand, including
    // our pseudo-placeholder styles. 

    // Use this instead of the `_defaults_m.scss` pholder() mixin. That 
    // should be removed. 

    color: $C_gray70;
    font-style: normal;
    font-size: $FS_label;
    line-height: $LH_standard;

    padding-left: $mobile_cursor_width;
    // NOTE: Android < 2.3 (all browsers) will NOT respond to padding styles 
    // on placeholder and neither does Android Browser (Samsung) on 4.0+.

    opacity: 1.0;
    // NOTE: For reasons unknown to me, default styles in Firefox render the
    // placeholder pseudo-element with non-1.0 opacity, which makes color
    // matching a pain in the tukus.

    // NOTE: Firefox, and only Firefox, will not vertical align the place-
    // holder text to the middle if the <input> has a height of 100%.
    // For now, my solution is to call it a bug with FF and ignore since its
    // 0.5% of our total browser traffic (data: 2013-05-30)
    
}


